doctype html
head
    // Title
    title Osman Delivery - #{title}
    // Required Meta Tag
    meta(http-equiv='Content-Type' content='text/html; charset=UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1')
    meta(name='handheldfriendly' content='true')
    meta(name='MobileOptimized' content='width')
    meta(name='description' content='Osman Delivery')
    meta(name='keywords' content='Osman, Truck, Delivery')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    // Favicon
    //- link(rel='shortcut icon' type='image/png' href='/images/logos/favicon.png')
    // Core Css
    link#themeColors(rel='stylesheet' href='/css/style.min.css')
    style. 
        //- body {
        //-     display: flex;
        //-     background-color: #f5f5f5;
        //-     //- width: 100vw;
        //-     //- height: 100vh;
        //-     background: url('/images/bg.jpg');
        //-     background-size: cover;
        //- }

        .radial-gradient::before {
            background: url('/images/truck.jpg');
            background-size: contain;
            opacity: 1
        }

// Body Wrapper
#main-wrapper.page-wrapper(data-layout='vertical' data-sidebartype='full' data-sidebar-position='fixed' data-header-position='fixed')
    .position-relative.overflow-hidden.radial-gradient.min-vh-100
        .position-relative.z-index-5
            .row
                .col-xl-7.col-xxl-7
                    a.text-nowrap.logo-img.d-block.px-4.py-9.w-100(href='/')
                        //- img(src='/images/logo.png' width='180' alt='')
                        //- .d-none.d-xl-flex.align-items-center.justify-content-center(stle='height: calc(100vh - 80px);')
                .col-xl-5.col-xxl-5
                    .authentication-login.min-vh-100.bg-body.row.justify-content-center.align-items-center.p-0


                        block content 

block modals

// Import Js Files
script(src='/libs/jquery/dist/jquery.min.js')
script(src='/libs/bootstrap/dist/js/bootstrap.bundle.min.js')
// core files

script. 
    function serialize(data) {
        let obj = {};
        for (let [key, value] of data) {
            if (obj[key] !== undefined) {
                if (!Array.isArray(obj[key])) {
                    obj[key] = [obj[key]];
                }
                obj[key].push(value);
            } else {
                obj[key] = value;
            }
        }
        return obj;
    }

    async function postForm(url, data) {
        const res = await fetch(url, {
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data)
        });
        return res.json();
    }


block scriptBlock
